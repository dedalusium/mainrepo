Deploiement avec tomcat et eclipse:
    Dans le cas d'une erreur de type java.lang.ClassNotFoundException: org.springframework.web.context.ContextLoaderListener
    ajouter dans les "deployment assembly" du projet eclipse les dépendances maven.
    
Les chemins indiqués dans le web.xml ou autre sont relatif au dossier WebContent
ex: <welcome-file-list>
        <welcome-file>/WEB-INF/view/index.jsp</welcome-file>
    </welcome-file-list>
    
Le parametrage <context:component-scan base-package="<package>" />
indique le package a scanner pour les controller annotés

Par défaut, pour une url "domain/file/one" spring mvc cherche la vue de nom "one"
d'apres la configuration du view resolver

Maven dans eclipse:
 - préciser les parametres de build pour ne pas appliquer la conf par défaut.
 exemple pour jre8:
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    
dépendance pour logs spring avec log4j2:

 compatibilité avec l'api log4j 1.2:
       <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        
adapter pour les composant utilisant slf4j:
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
